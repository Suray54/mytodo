{"version":3,"sources":["assets/logowhite.png","firebase/firebase.utils.js","redux/todo/todo.types.js","redux/todo/todo.actions.js","component/layouts/navbar/navbar.components.jsx","redux/user/user.selector.js","redux/projects/project.types.js","redux/projects/project.actions.js","component/body/sidepanel/addprojects/addprojects.components.jsx","redux/projects/project.selector.js","component/body/sidepanel/listprojects/listprojects.components.jsx","component/body/sidepanel/sidepanel.components.jsx","redux/todo/todo.selector.js","component/body/todolist/addtodo/addtodo.components.jsx","component/body/todolist/list/list.components.jsx","component/body/todolist/todolist.components.jsx","component/body/body.component.jsx","component/homepage.componenst.jsx","component/auth/login/login.components.jsx","component/auth/signup/signup.components.jsx","spinner.jsx","redux/user/user.types.js","App.js","redux/user/user.actions.js","redux/projects/project.reducer.js","redux/todo/todo.util.js","redux/todo/todo.reducer.js","redux/user/user.reducer.js","redux/root-reducer.js","redux/store.js","index.js"],"names":["module","exports","saveUser","createdUser","a","userRef","firestore","doc","user","uid","createdAt","Date","set","email","displayName","avatar","photoURL","firebaseAddToDo","addtask","addproject","todoRef","collection","add","completed","firebaseAddProject","contactRef","deleteProject","id","delete","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","timestamp","FieldValue","serverTimestamp","TodoActionTypes","setShowAddToDo","type","connect","dispatch","className","onClick","window","location","reload","src","logowhite","alt","title","signOut","then","console","log","selectUser","state","selectLoading","createSelector","isLoading","selectCurrentUser","currentUser","ProjectActionTypes","setShowAddProjects","setShowListProjects","Addprojects","handleSubmit","event","preventDefault","props","setState","error","handleChange","target","value","name","this","onSubmit","placeholder","onChange","autoComplete","required","autoFocus","Component","mapStateToProps","createStructuredSelector","selectProject","project","showAddProjects","selectAllProject","projects","showListProjects","ListProjects","unsubscribe","handleDelete","setProject","clearProject","onAuthStateChanged","userAuth","where","onSnapshot","snap","documents","docs","map","push","data","selectProjects","length","key","projectMap","payload","Sidepanel","setTodoWithDate","setTodoWithToday","setTodoWithDue","setTodoWithProject","header","selectTodo","todo","showAddToDo","addToDo","selectToDos","todos","selectHeader","todoisLoading","Addtodo","date","selectAllProjects","AllList","setToDo","clearToDo","maindocs","slice","sort","b","snapShot","completedTodo","deleteTodo","selectToDo","handleCompleted","todoMap","Body","Homepage","Login","password","loading","signInWithEmailAndPassword","errors","message","label","disabled","to","Signup","username","confirmPassword","createUserWithEmailAndPassword","updateProfile","md5","catch","err","Spinner","UserActionTypes","App","unsubscribeFromAuth","setCurrentUser","clearUser","history","exact","path","component","withRouter","INITIAL_STATE","projectReducer","action","setWithDate","collections","setWithToday","setWithDue","setWithProject","x","toLowerCase","y","todoReducer","userReducer","combineReducers","middlewares","logger","store","createStore","rootReducer","applyMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e7c98e39.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logowhite.41c090e1.png\";","import firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/auth\";\r\nconst config = {\r\n  apiKey: \"AIzaSyCfCg6zJ9OnbPDxJi1VQPbX6enEl7OUHQ4\",\r\n  authDomain: \"todoist-17cef.firebaseapp.com\",\r\n  databaseURL: \"https://todoist-17cef.firebaseio.com\",\r\n  projectId: \"todoist-17cef\",\r\n  storageBucket: \"todoist-17cef.appspot.com\",\r\n  messagingSenderId: \"494862876954\",\r\n  appId: \"1:494862876954:web:474d3b458273f962da2ca3\",\r\n  measurementId: \"G-XPBEPJV4VH\",\r\n};\r\n\r\nexport const saveUser = async (createdUser) => {\r\n  const userRef = firestore.doc(`users/${createdUser.user.uid}`);\r\n  const createdAt = new Date();\r\n  await userRef.set({\r\n    uid: createdUser.user.uid,\r\n    email: createdUser.user.email,\r\n    displayName: createdUser.user.displayName,\r\n    avatar: createdUser.user.photoURL,\r\n    createdAt,\r\n  });\r\n  return userRef;\r\n};\r\n\r\nexport const firebaseAddToDo = async ({\r\n  addtask,\r\n  uid,\r\n  createdAt,\r\n  addproject,\r\n}) => {\r\n  const todoRef = firestore.collection(`Todo`);\r\n  const completed = false;\r\n  await todoRef.add({ addtask, uid, createdAt, addproject, completed });\r\n};\r\n\r\nexport const completedTodo = (id) => {\r\n  const todoRef = firestore.collection(\"Todo\").doc(id);\r\n  todoRef.onSnapshot((snapShot) => {\r\n    const completed = true;\r\n    todoRef.set({ ...snapShot.data(), completed });\r\n  });\r\n\r\n  return todoRef;\r\n};\r\n\r\n//.then(() => {\r\n// console.log(\" successfully Completed!\");\r\n//})\r\n//.catch((error) => {\r\n// console.error(\"Error: \", error);\r\n//});\r\nexport const deleteTodo = (id) => {\r\n  const todoRef = firestore.collection(\"Todo\").doc(id).delete();\r\n\r\n  return todoRef;\r\n  //return firestore.collection(\"Todo\").doc(id).delete();\r\n};\r\n\r\nexport const convertTodoSnapShotToDateMap = (collections) => {\r\n  const transformedCollection = collections\r\n    .slice()\r\n    .sort((a, b) => a.createdAt - b.createdAt);\r\n\r\n  return transformedCollection;\r\n};\r\n\r\nexport const firebaseAddProject = async ({ addproject, uid, createdAt }) => {\r\n  const contactRef = firestore.collection(`Project`);\r\n  contactRef.add({ addproject, uid, createdAt });\r\n  return contactRef;\r\n};\r\n\r\nexport const deleteProject = (id) => {\r\n  const todoRef = firestore.collection(\"Project\").doc(id).delete();\r\n\r\n  return todoRef;\r\n};\r\n\r\nfirebase.initializeApp(config);\r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();\r\nexport const timestamp = firebase.firestore.FieldValue.serverTimestamp;\r\nexport default firebase;\r\n","export const TodoActionTypes = {\r\n  SET_SHOW_ADDTODO: \"SET_SHOW_ADDTODO\",\r\n  SET_TODO: \"SET_TODO\",\r\n  CLEAR_TODO: \"CLEAR_TODO\",\r\n  SET_TODO_WITHDATE: \"SET_TODO_WITHDATE\",\r\n  SET_TODO_WITHTODAY: \"SET_TODO_WITHTODAY\",\r\n  SET_TODO_WITHDUE: \"SET_TODO_WITHDUE\",\r\n  SET_TODO_WITHPROJECT: \"SET_TODO_WITHPROJECT\",\r\n};\r\n","import { TodoActionTypes } from \"./todo.types\";\r\n\r\nexport const setShowAddToDo = () => ({\r\n  type: TodoActionTypes.SET_SHOW_ADDTODO,\r\n});\r\nexport const setToDo = (todos) => ({\r\n  type: TodoActionTypes.SET_TODO,\r\n  payload: todos,\r\n});\r\nexport const clearToDo = () => ({\r\n  type: TodoActionTypes.CLEAR_TODO,\r\n});\r\n\r\nexport const setTodoWithDate = (header) => ({\r\n  type: TodoActionTypes.SET_TODO_WITHDATE,\r\n  payload: header,\r\n});\r\n\r\nexport const setTodoWithToday = (header) => ({\r\n  type: TodoActionTypes.SET_TODO_WITHTODAY,\r\n  payload: header,\r\n});\r\n\r\nexport const setTodoWithDue = (header) => ({\r\n  type: TodoActionTypes.SET_TODO_WITHDUE,\r\n  payload: header,\r\n});\r\nexport const setTodoWithProject = (header) => ({\r\n  type: TodoActionTypes.SET_TODO_WITHPROJECT,\r\n  payload: header,\r\n});\r\n","import React from \"react\";\r\nimport \"./navbar.styles.scss\";\r\nimport logowhite from \"./../../../assets/logowhite.png\";\r\nimport { auth } from \"../../../firebase/firebase.utils\";\r\nimport { FaSignOutAlt } from \"react-icons/fa\";\r\nimport { connect } from \"react-redux\";\r\nimport { setShowAddToDo } from \"../../../redux/todo/todo.actions\";\r\nexport const Navbar = ({ setShowAddToDo }) => {\r\n  function refreshPage() {\r\n    window.location.reload();\r\n  }\r\n\r\n  return (\r\n    <div className=\"header\">\r\n      <div className=\"navbar\">\r\n        <div className=\"logo\" onClick={refreshPage}>\r\n          <img src={logowhite} alt=\"logo\" />\r\n        </div>\r\n        <ul className=\"options\">\r\n          <li\r\n            title=\"AddTodo\"\r\n            className=\"options__todoadd\"\r\n            onClick={setShowAddToDo}\r\n          >\r\n            +\r\n          </li>\r\n          <li\r\n            title=\"SignOut\"\r\n            className=\"options__signout\"\r\n            onClick={() => auth.signOut().then(() => console.log(\"signed out\"))}\r\n          >\r\n            <FaSignOutAlt />\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  setShowAddToDo: () => dispatch(setShowAddToDo()),\r\n});\r\nexport default connect(null, mapDispatchToProps)(Navbar);\r\n","import { createSelector } from \"reselect\";\r\n\r\nconst selectUser = (state) => state.user;\r\n\r\nexport const selectLoading = createSelector(\r\n  [selectUser],\r\n  (user) => user.isLoading\r\n);\r\n\r\nexport const selectCurrentUser = createSelector(\r\n  [selectUser],\r\n  (user) => user.currentUser\r\n);\r\n","export const ProjectActionTypes = {\r\n  SET_SHOW_PROJECT: \"SET_SHOW_PROJECT\",\r\n  SET_PROJECT: \"SET_PROJECT\",\r\n  CLEAR_PROJECT: \"CLEAR_PROJECT\",\r\n  SET_SHOW_PROJECTLIST: \" SET_SHOW_PROJECTLIST\",\r\n};\r\n","import { ProjectActionTypes } from \"./project.types\";\r\n\r\nexport const setShowAddProjects = () => ({\r\n  type: ProjectActionTypes.SET_SHOW_PROJECT,\r\n});\r\nexport const setProject = (projects) => ({\r\n  type: ProjectActionTypes.SET_PROJECT,\r\n  payload: projects,\r\n});\r\nexport const clearProject = () => ({\r\n  type: ProjectActionTypes.CLEAR_PROJECT,\r\n});\r\nexport const setShowListProjects = () => ({\r\n  type: ProjectActionTypes.SET_SHOW_PROJECTLIST,\r\n});\r\n","import React, { Component } from \"react\";\r\nimport \"./addprojects.styles.scss\";\r\nimport { connect } from \"react-redux\";\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport {\r\n  firebaseAddProject,\r\n  timestamp,\r\n} from \"./../../../../firebase/firebase.utils\";\r\nimport { selectCurrentUser } from \"../../../../redux/user/user.selector\";\r\nimport {\r\n  setShowAddProjects,\r\n  setShowListProjects,\r\n} from \"../../../../redux/projects/project.actions\";\r\n\r\nexport class Addprojects extends Component {\r\n  state = { addproject: \"\" };\r\n\r\n  handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    const { addproject } = this.state;\r\n    const { selectCurrentUser, setShowAddProjects } = this.props;\r\n    const { uid } = selectCurrentUser;\r\n    const createdAt = timestamp();\r\n    try {\r\n      firebaseAddProject({ addproject, uid, createdAt });\r\n      this.setState({\r\n        addproject: \"\",\r\n      });\r\n      setShowAddProjects();\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n  handleChange = (event) => {\r\n    const { value, name } = event.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n  render() {\r\n    const { setShowAddProjects } = this.props;\r\n    return (\r\n      <div className=\"addprojects\">\r\n        <form onSubmit={this.handleSubmit}>\r\n          <div className=\"input-container\">\r\n            <input\r\n              name=\"addproject\"\r\n              type=\"text\"\r\n              placeholder=\"Add Project\"\r\n              onChange={this.handleChange}\r\n              value={this.state.addproject}\r\n              autoComplete=\"off\"\r\n              required\r\n              autoFocus\r\n            />\r\n          </div>\r\n          <div className=\"button\">\r\n            <button type=\"submit\" className=\"button__add\">\r\n              Add\r\n            </button>\r\n            <div\r\n              className=\"button__cancel\"\r\n              onClick={() => setShowAddProjects()}\r\n            >\r\n              cancel\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = createStructuredSelector({\r\n  selectCurrentUser: selectCurrentUser,\r\n});\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  setShowAddProjects: () => dispatch(setShowAddProjects()),\r\n  setShowListProjects: () => dispatch(setShowListProjects()),\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Addprojects);\r\n","import { createSelector } from \"reselect\";\r\n\r\nconst selectProject = (state) => state.project;\r\n\r\nexport const showAddProjects = createSelector(\r\n  [selectProject],\r\n  (project) => project.showAddProjects\r\n);\r\nexport const selectAllProject = createSelector(\r\n  [selectProject],\r\n  (project) => project.projects\r\n);\r\n\r\nexport const showListProjects = createSelector(\r\n  [selectProject],\r\n  (project) => project.showListProjects\r\n);\r\n","import React, { Component } from \"react\";\r\nimport \"./listprojects.styles.scss\";\r\nimport { connect } from \"react-redux\";\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport { FaCircle, FaTrash } from \"react-icons/fa\";\r\nimport {\r\n  clearProject,\r\n  setProject,\r\n  setShowListProjects,\r\n} from \"../../../../redux/projects/project.actions\";\r\nimport { selectAllProject } from \"../../../../redux/projects/project.selector\";\r\nimport {\r\n  auth,\r\n  firestore,\r\n  deleteProject,\r\n} from \"./../../../../firebase/firebase.utils\";\r\nexport class ListProjects extends Component {\r\n  unsubscribe = null;\r\n\r\n  componentDidMount() {\r\n    const { setProject, clearProject } = this.props;\r\n    this.unsubscribe = auth.onAuthStateChanged(async (userAuth) => {\r\n      if (userAuth) {\r\n        const showRef = await firestore\r\n          .collection(\"Project\")\r\n          .where(\"uid\", \"==\", userAuth.uid);\r\n        showRef.onSnapshot((snap) => {\r\n          let documents = [];\r\n          snap.docs.map((doc) => {\r\n            documents.push({ ...doc.data(), id: doc.id });\r\n            return documents;\r\n          });\r\n          console.log(documents);\r\n\r\n          setProject(documents);\r\n        });\r\n      } else {\r\n        await clearProject();\r\n      }\r\n    });\r\n  }\r\n\r\n  handleDelete = (id) => {\r\n    deleteProject(id);\r\n  };\r\n\r\n  render() {\r\n    const { selectProjects } = this.props;\r\n    let output;\r\n    if (!selectProjects.length) {\r\n      output = (\r\n        <div className=\"list-projects\">\r\n          <div className=\"list-projects__empty\">No Projects</div>\r\n          <hr />\r\n        </div>\r\n      );\r\n    } else {\r\n      output = (\r\n        <div className=\"list-projects\">\r\n          <div className=\"list-projects__list\">\r\n            {selectProjects.map((selectProject) => (\r\n              <ul key={selectProject.id}>\r\n                <li className=\"list-projects__single\">\r\n                  <p>\r\n                    <span className=\"list-projects__single--dot\">\r\n                      <FaCircle />\r\n                    </span>\r\n                    <span className=\"list-projects__single--projectname\">\r\n                      {selectProject.addproject}\r\n                    </span>\r\n                  </p>\r\n\r\n                  <div\r\n                    className=\"list-projects__single--trash\"\r\n                    onClick={() => this.handleDelete(selectProject.id)}\r\n                  >\r\n                    <FaTrash />\r\n                  </div>\r\n                </li>\r\n              </ul>\r\n            ))}\r\n          </div>\r\n          <hr />\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return output;\r\n  }\r\n}\r\nconst mapStateToProps = createStructuredSelector({\r\n  selectProjects: selectAllProject,\r\n});\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  setProject: (projectMap) => dispatch(setProject(projectMap)),\r\n  clearProject: () => dispatch(clearProject()),\r\n  setShowListProjects: () => dispatch(setShowListProjects()),\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ListProjects);\r\n","import React, { Component } from \"react\";\r\nimport \"./sidepanel.styles.scss\";\r\nimport {\r\n  //FaChevronDown,\r\n  FaListAlt,\r\n  FaInbox,\r\n  FaRegCalendarAlt,\r\n  FaRegCalendar,\r\n} from \"react-icons/fa\";\r\nimport { connect } from \"react-redux\";\r\nimport { createStructuredSelector } from \"reselect\";\r\n\r\nimport Addprojects from \"./addprojects/addprojects.components\";\r\nimport ListProjects from \"./listprojects/listprojects.components\";\r\nimport {\r\n  showAddProjects,\r\n  showListProjects,\r\n} from \"../../../redux/projects/project.selector\";\r\nimport {\r\n  setShowAddProjects,\r\n  //setShowListProjects,\r\n} from \"../../../redux/projects/project.actions\";\r\nimport {\r\n  setTodoWithDate,\r\n  setTodoWithDue,\r\n  setTodoWithProject,\r\n  setTodoWithToday,\r\n} from \"../../../redux/todo/todo.actions\";\r\n\r\nexport class Sidepanel extends Component {\r\n  render() {\r\n    const {\r\n      setShowAddProjects,\r\n      showAddProjects,\r\n      // setShowListProjects,\r\n      showListProjects,\r\n      setTodoWithDate,\r\n      setTodoWithToday,\r\n      setTodoWithDue,\r\n      setTodoWithProject,\r\n    } = this.props;\r\n    return (\r\n      <div className=\"sidepanel\">\r\n        <ul className=\"sidepanel__generic\">\r\n          <li\r\n            className=\"inbox\"\r\n            onClick={() => setTodoWithDate(\"New Tasks On Top\")}\r\n          >\r\n            <div>\r\n              <span className=\"icon\">\r\n                <FaInbox />\r\n              </span>\r\n              <span>Arrange With Date</span>\r\n            </div>\r\n          </li>\r\n          <li\r\n            className=\"projects\"\r\n            onClick={() => setTodoWithProject(\"Sort By project\")}\r\n            //onClick={() => {\r\n            // setShowListProjects();\r\n            // }}\r\n          >\r\n            <span className={!showListProjects ? \"reverse-icon icon \" : \"icon\"}>\r\n              <FaListAlt />\r\n            </span>\r\n            <span>By Projects</span>\r\n          </li>\r\n          <li\r\n            className=\"today\"\r\n            onClick={() => setTodoWithToday(\"Completed Tasks\")}\r\n          >\r\n            <div>\r\n              <span className=\"icon\">\r\n                <FaRegCalendar />\r\n              </span>\r\n              <span>Completed</span>\r\n            </div>\r\n          </li>\r\n          <li className=\"next_7\" onClick={() => setTodoWithDue(\"Due Tasks\")}>\r\n            <div>\r\n              <span className=\"icon\">\r\n                <FaRegCalendarAlt />\r\n              </span>\r\n              <span>Due Tasks</span>\r\n            </div>\r\n          </li>\r\n\r\n          <hr />\r\n        </ul>\r\n        {showListProjects ? (\r\n          <div className=\"sidepanel__projects\">\r\n            <ListProjects />\r\n          </div>\r\n        ) : null}\r\n\r\n        {!showAddProjects ? (\r\n          <div\r\n            className=\"sidepanel__toogleprojects\"\r\n            onClick={() => setShowAddProjects(!showAddProjects)}\r\n          >\r\n            <p>\r\n              <span>+</span> Add Project\r\n            </p>\r\n          </div>\r\n        ) : (\r\n          <div className=\"sidepanel__addprojects\">\r\n            <Addprojects />\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  showAddProjects: showAddProjects,\r\n  showListProjects: showListProjects,\r\n});\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  setShowAddProjects: () => dispatch(setShowAddProjects()),\r\n  //setShowListProjects: () => dispatch(setShowListProjects()),\r\n  setTodoWithDate: (header) => dispatch(setTodoWithDate(header)),\r\n  setTodoWithToday: (header) => dispatch(setTodoWithToday(header)),\r\n  setTodoWithDue: (header) => dispatch(setTodoWithDue(header)),\r\n  setTodoWithProject: (header) => dispatch(setTodoWithProject(header)),\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Sidepanel);\r\n","import { createSelector } from \"reselect\";\r\n\r\nconst selectTodo = (state) => state.todo;\r\n\r\nexport const showAddToDo = createSelector([selectTodo], (todo) => todo.addToDo);\r\nexport const selectToDos = createSelector([selectTodo], (todo) => todo.todos);\r\nexport const selectToDoLoading = createSelector(\r\n  [selectTodo],\r\n  (todo) => todo.todoisLoading\r\n);\r\n\r\nexport const selectHeader = createSelector([selectTodo], (todo) => todo.header);\r\n","import React, { Component } from \"react\";\r\nimport \"./addtodo.styles.scss\";\r\nimport { connect } from \"react-redux\";\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport { setShowAddToDo } from \"../../../../redux/todo/todo.actions\";\r\nimport { firebaseAddToDo } from \"../../../../firebase/firebase.utils\";\r\nimport { selectCurrentUser } from \"../../../../redux/user/user.selector\";\r\nimport { timestamp } from \"../../../../firebase/firebase.utils\";\r\n\r\nimport { selectAllProject } from \"../../../../redux/projects/project.selector\";\r\nexport class Addtodo extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      addtask: \"\",\r\n      addproject: \"\",\r\n      date: \"\",\r\n    };\r\n  }\r\n\r\n  handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    const { setShowAddToDo } = this.props;\r\n    const { addtask, addproject } = this.state; //, date\r\n    const { selectCurrentUser } = this.props;\r\n    const { uid } = selectCurrentUser;\r\n\r\n    try {\r\n      const createdAt = timestamp();\r\n\r\n      firebaseAddToDo({ addtask, uid, createdAt, addproject });\r\n      this.setState({\r\n        addtask: \"\",\r\n        addproject: \"\",\r\n        date: \"\",\r\n      });\r\n      // if (!date) {\r\n      //} else {\r\n      //  const createdAt = new Date(date);\r\n      // firebaseAddToDo({ addtask, uid, createdAt, addproject });\r\n      //this.setState({\r\n      // addtask: \"\",\r\n      // addproject: \"\",\r\n      //  date: \"\",\r\n      //  });\r\n      //  }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n    setShowAddToDo();\r\n  };\r\n  handleChange = (event) => {\r\n    const { value, name } = event.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n  render() {\r\n    const { setShowAddToDo, selectAllProjects } = this.props;\r\n    return (\r\n      <div className=\"addtodo\">\r\n        <h4>\r\n          <span>+</span> Add New Task\r\n        </h4>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <div className=\"input-container\">\r\n            <input\r\n              name=\"addtask\"\r\n              type=\"text\"\r\n              placeholder=\"Add Task\"\r\n              onChange={this.handleChange}\r\n              value={this.state.addtask}\r\n              autoComplete=\"off\"\r\n              required\r\n              autoFocus\r\n            />\r\n          </div>\r\n\r\n          <div className=\"input-container\">\r\n            <select\r\n              id=\"addproject\"\r\n              name=\"addproject\"\r\n              value={this.state.addproject}\r\n              onChange={this.handleChange}\r\n            >\r\n              <option value=\"No Project\">Choose a Project</option>\r\n              {selectAllProjects.map((selectProject) => (\r\n                <option key={selectProject.id} value={selectProject.addproject}>\r\n                  {selectProject.addproject}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n\r\n          <div className=\"input-container\"></div>\r\n          <div className=\"button\">\r\n            <button type=\"submit\" className=\"button__add\">\r\n              Add Task\r\n            </button>\r\n            <div className=\"button__cancel\" onClick={setShowAddToDo}>\r\n              cancel\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = createStructuredSelector({\r\n  selectCurrentUser: selectCurrentUser,\r\n  selectAllProjects: selectAllProject,\r\n});\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  setShowAddToDo: () => dispatch(setShowAddToDo()),\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Addtodo);\r\n","import React, { Component } from \"react\";\r\nimport \"./list.styles.scss\";\r\nimport { connect } from \"react-redux\";\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport {\r\n  auth,\r\n  firestore,\r\n  convertTodoSnapShotToDateMap,\r\n  deleteTodo,\r\n  completedTodo,\r\n} from \"./../../../../firebase/firebase.utils\";\r\nimport { FaTrash } from \"react-icons/fa\";\r\nimport {\r\n  setToDo,\r\n  clearToDo,\r\n  setShowAddToDo,\r\n} from \"./../../../../redux/todo/todo.actions\";\r\nimport {\r\n  selectHeader,\r\n  selectToDos,\r\n} from \"../../../../redux/todo/todo.selector\";\r\n\r\nexport class AllList extends Component {\r\n  componentDidMount() {\r\n    const { setToDo, clearToDo } = this.props;\r\n    this.unsubscribe = auth.onAuthStateChanged(async (userAuth) => {\r\n      if (userAuth) {\r\n        const showRef = await firestore\r\n          .collection(\"Todo\")\r\n          .where(\"uid\", \"==\", userAuth.uid);\r\n\r\n        showRef.onSnapshot((snap) => {\r\n          let documents = [];\r\n          snap.docs.map((doc) => {\r\n            documents.push({ ...doc.data(), id: doc.id });\r\n            return documents;\r\n          });\r\n          console.log(documents);\r\n          const maindocs = convertTodoSnapShotToDateMap(documents);\r\n          setToDo(maindocs);\r\n          console.log(maindocs);\r\n        });\r\n      } else {\r\n        await clearToDo();\r\n      }\r\n    });\r\n  }\r\n\r\n  handleCompleted(id) {\r\n    completedTodo(id);\r\n  }\r\n  handleDelete(id) {\r\n    deleteTodo(id);\r\n  }\r\n  render() {\r\n    const { selectToDos, setShowAddToDo, selectHeader } = this.props;\r\n    let output;\r\n\r\n    if (!selectToDos.length && setShowAddToDo)\r\n      output = (\r\n        <div className=\"list\">\r\n          <h1 className=\"Heading\">Empty</h1>\r\n\r\n          <p className=\"list__addtodo\" onClick={setShowAddToDo}>\r\n            <span>+</span>Click to Add your first task.\r\n          </p>\r\n        </div>\r\n      );\r\n    else\r\n      output = (\r\n        <div className=\"list\">\r\n          <h1 className=\"Heading\"> {selectHeader}</h1>\r\n\r\n          <div className=\"list__todo\">\r\n            {selectToDos.map((selectToDo) => (\r\n              <ul className=\"list__todo--single\" key={selectToDo.id}>\r\n                <li>\r\n                  <span\r\n                    className={\r\n                      selectToDo.completed\r\n                        ? \"checkbox-completed checkbox\"\r\n                        : \"checkbox\"\r\n                    }\r\n                    onClick={() => this.handleCompleted(selectToDo.id)}\r\n                  ></span>\r\n                  <div className=\"list__todo--detail\">\r\n                    <p\r\n                      className={\r\n                        selectToDo.completed ? \"task-completed task\" : \"task\"\r\n                      }\r\n                    >\r\n                      {selectToDo.addtask}\r\n                    </p>\r\n\r\n                    <div\r\n                      className=\"list__todo--trash\"\r\n                      onClick={() => this.handleDelete(selectToDo.id)}\r\n                    >\r\n                      <FaTrash />\r\n                    </div>\r\n                  </div>\r\n                </li>\r\n                <hr />\r\n              </ul>\r\n            ))}\r\n          </div>\r\n          <p className=\"list__addtodo withcolor\" onClick={setShowAddToDo}>\r\n            <span>+</span> Add New Task\r\n          </p>\r\n        </div>\r\n      );\r\n\r\n    return output;\r\n  }\r\n}\r\nconst mapStateToProps = createStructuredSelector({\r\n  selectToDos: selectToDos,\r\n  selectHeader: selectHeader,\r\n});\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  setToDo: (todoMap) => dispatch(setToDo(todoMap)),\r\n  clearToDo: () => dispatch(clearToDo()),\r\n  setShowAddToDo: () => dispatch(setShowAddToDo()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AllList);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport { showAddToDo } from \"../../../redux/todo/todo.selector\";\r\n\r\nimport AddTodo from \"./addtodo/addtodo.components\";\r\nimport AllList from \"./list/list.components\";\r\nexport const Todolist = ({ showAddToDo }) => {\r\n  return showAddToDo ? <AddTodo /> : <AllList />;\r\n};\r\nconst mapStateToProps = createStructuredSelector({\r\n  showAddToDo: showAddToDo,\r\n});\r\nexport default connect(mapStateToProps)(Todolist);\r\n","import React from \"react\";\r\nimport \"./body.styles.scss\";\r\nimport Sidepanel from \"./sidepanel/sidepanel.components\";\r\nimport Todolist from \"./todolist/todolist.components\";\r\nexport const Body = () => {\r\n  return (\r\n    <div className=\"main-body\">\r\n      <div className=\"space--one\"></div>\r\n      <Sidepanel />\r\n      <Todolist />\r\n      <div className=\"space--two\"></div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport \"./homepage.styles.scss\";\r\nimport Navbar from \"./layouts/navbar/navbar.components\";\r\nimport { Body } from \"./body/body.component\";\r\nexport const Homepage = () => {\r\n  return (\r\n    <div>\r\n      <div className=\"homepage\">\r\n        <Navbar />\r\n        <Body />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { Component } from \"react\";\r\nimport \"./login.styles.scss\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { auth } from \"../../../firebase/firebase.utils\";\r\nexport default class Login extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      errors: \"\",\r\n      loading: false,\r\n    };\r\n  }\r\n  handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    const { email, password } = this.state;\r\n    try {\r\n      this.setState({\r\n        loading: true,\r\n      });\r\n      await auth.signInWithEmailAndPassword(email, password);\r\n      //const currentUserRef = auth.currentUser;\r\n      //console.log(currentUserRef);\r\n      //console.log(currentUserRef.displayName);\r\n      //console.log(currentUserRef.photoURL);\r\n      this.setState({\r\n        email: \"\",\r\n        password: \"\",\r\n        errors: \"\",\r\n        loading: false,\r\n      });\r\n    } catch (error) {\r\n      console.error(error);\r\n      this.setState({ errors: error.message, loading: false });\r\n    }\r\n  };\r\n  handleChange = (event) => {\r\n    const { value, name } = event.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"login\">\r\n        <h2>Login Here</h2>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <div className=\"input-container\">\r\n            <i className=\"fa fa-user icon\"></i>\r\n            <input\r\n              name=\"email\"\r\n              type=\"email\"\r\n              placeholder=\"Email Address\"\r\n              value={this.state.email}\r\n              onChange={this.handleChange}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"input-container\">\r\n            <i className=\"fa fa-envelope  icon\"></i>\r\n            <input\r\n              type=\"password\"\r\n              name=\"password\"\r\n              placeholder=\"Password\"\r\n              onChange={this.handleChange}\r\n              value={this.state.password}\r\n              label=\"password\"\r\n              required\r\n            />\r\n          </div>\r\n          <button\r\n            disabled={this.state.loading}\r\n            className={this.state.loading ? \"loading\" : \"submit-button\"}\r\n          >\r\n            Submit\r\n          </button>\r\n        </form>\r\n        {this.state.errors ? (\r\n          <div className=\"error-link\">\r\n            <h3>Error</h3>\r\n            {this.state.errors}\r\n          </div>\r\n        ) : null}\r\n\r\n        <div className=\"signup-link\">\r\n          Don't have an Account ?\r\n          <Link className=\"signup-link--link\" to=\"/signup\">\r\n            Signup\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./signup.styles.scss\";\r\nimport md5 from \"md5\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { auth, saveUser } from \"../../../firebase/firebase.utils\";\r\n\r\nclass Signup extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      username: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      confirmPassword: \"\",\r\n      errors: \"\",\r\n      loading: false,\r\n    };\r\n  }\r\n\r\n  handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    const { username, email, password, confirmPassword } = this.state;\r\n    if (password !== confirmPassword) {\r\n      console.log(\"Password do not match\");\r\n      this.setState({ errors: \"Password do not match\" });\r\n      return;\r\n    }\r\n\r\n    this.setState({\r\n      loading: true,\r\n    });\r\n    auth\r\n      .createUserWithEmailAndPassword(email, password)\r\n      .then((createdUser) => {\r\n        createdUser.user\r\n          .updateProfile({\r\n            displayName: username,\r\n            photoURL: `http://gravatar.com/avatar/${md5(email)}?d=identicon`,\r\n          })\r\n          .then(() => {\r\n            saveUser(createdUser).then(() => {\r\n              console.log(\"user saved\");\r\n            });\r\n          });\r\n\r\n        console.log(createdUser);\r\n        this.setState({\r\n          username: \"\",\r\n          email: \"\",\r\n          password: \"\",\r\n          confirmPassword: \"\",\r\n          errors: \"\",\r\n          loading: false,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n        this.setState({ errors: err.message, loading: false });\r\n      });\r\n  };\r\n\r\n  handleChange = (event) => {\r\n    const { value, name } = event.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"sign-up\">\r\n        <h2>Sign-up Here</h2>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <div className=\"input-container\">\r\n            <i className=\"fa fa-user icon\"></i>\r\n            <input\r\n              name=\"username\"\r\n              type=\"text\"\r\n              placeholder=\"Username\"\r\n              onChange={this.handleChange}\r\n              value={this.state.username}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"input-container\">\r\n            <i className=\"fa fa-envelope icon\"></i>\r\n            <input\r\n              name=\"email\"\r\n              type=\"email\"\r\n              placeholder=\"Email Address\"\r\n              value={this.state.email}\r\n              onChange={this.handleChange}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"input-container\">\r\n            <i className=\"fa fa-key icon\"></i>\r\n            <input\r\n              type=\"password\"\r\n              name=\"password\"\r\n              placeholder=\"Password\"\r\n              onChange={this.handleChange}\r\n              value={this.state.password}\r\n              label=\"password\"\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"input-container\">\r\n            <i className=\"fa fa-repeat icon\"></i>\r\n            <input\r\n              type=\"password\"\r\n              name=\"confirmPassword\"\r\n              placeholder=\"Confirm password\"\r\n              onChange={this.handleChange}\r\n              value={this.state.confirmPassword}\r\n              label=\"confirmPassword\"\r\n              required\r\n            />\r\n          </div>\r\n          <button\r\n            disabled={this.state.loading}\r\n            className={this.state.loading ? \"loading\" : \"submit-button\"}\r\n          >\r\n            Submit\r\n          </button>\r\n        </form>\r\n        {this.state.errors ? (\r\n          <div className=\"error-link\">\r\n            <h3>Error</h3>\r\n            {this.state.errors}\r\n          </div>\r\n        ) : null}\r\n\r\n        <div className=\"login-link\">\r\n          Are you already a User ?\r\n          <Link className=\"login-link--link\" to=\"/login\">\r\n            Login\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Signup;\r\n","import React, { Component } from \"react\";\r\nimport \"./spinner.styles.scss\";\r\nexport default class Spinner extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"spinner-box\">\r\n        <div className=\"spinner\">\r\n          <div className=\"bounce1\"></div>\r\n          <div className=\"bounce2\"></div>\r\n          <div className=\"bounce3\"></div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","export const UserActionTypes = {\r\n  SET_CURRENT_USER: \"SET_CURRENT_USER\",\r\n  CLEAR_USER: \"CLEAR_USER\",\r\n};\r\n","import React, { Component } from \"react\";\n\nimport { Homepage } from \"./component/homepage.componenst\";\nimport Login from \"./component/auth/login/login.components\";\nimport Signup from \"./component/auth/signup/signup.components\";\nimport Spinner from \"./spinner\";\n\nimport { Switch, Route, withRouter } from \"react-router-dom\";\n\nimport { auth, firestore } from \"./firebase/firebase.utils\";\n\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport { setCurrentUser, clearUser } from \"./redux/user/user.actions\";\nimport { selectLoading } from \"./redux/user/user.selector\";\nexport class App extends Component {\n  unsubscribeFromAuth = null;\n\n  componentDidMount() {\n    const { setCurrentUser, clearUser, history } = this.props;\n    this.unsubscribeFromAuth = auth.onAuthStateChanged(async (userAuth) => {\n      if (userAuth) {\n        const userRef = await firestore.doc(`users/${userAuth.uid}`);\n        await userRef.onSnapshot((snapShot) => {\n          console.log(snapShot.data());\n          setCurrentUser({\n            ...snapShot.data(),\n          });\n        });\n        history.push(\"/\");\n      } else {\n        await clearUser();\n        history.push(\"/login\");\n      }\n    });\n  }\n  componentWillUnmount() {\n    this.unsubscribeFromAuth();\n  }\n  render() {\n    const { isLoading } = this.props;\n    return isLoading ? (\n      <Spinner />\n    ) : (\n      <div>\n        <Switch>\n          <Route exact path=\"/\" component={Homepage} />\n          <Route exact path=\"/signup\" component={Signup} />\n          <Route exact path=\"/login\" component={Login} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = createStructuredSelector({\n  isLoading: selectLoading,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  setCurrentUser: (user) => dispatch(setCurrentUser(user)),\n  clearUser: () => dispatch(clearUser()),\n});\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));\n","import { UserActionTypes } from \"./user.types\";\r\n\r\nexport const setCurrentUser = (user) => ({\r\n  type: UserActionTypes.SET_CURRENT_USER,\r\n  payload: user,\r\n});\r\nexport const clearUser = () => ({\r\n  type: UserActionTypes.CLEAR_USER,\r\n});\r\n","import { ProjectActionTypes } from \"./project.types\";\r\n\r\nconst INITIAL_STATE = {\r\n  projects: [],\r\n  showAddProjects: false,\r\n  showListProjects: true,\r\n};\r\n\r\nconst projectReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case ProjectActionTypes.SET_SHOW_PROJECT:\r\n      return {\r\n        ...state,\r\n        showAddProjects: !state.showAddProjects,\r\n      };\r\n    case ProjectActionTypes.SET_PROJECT:\r\n      return {\r\n        ...state,\r\n        projects: action.payload,\r\n      };\r\n\r\n    case ProjectActionTypes.SET_SHOW_PROJECTLIST:\r\n      return {\r\n        ...state,\r\n        showListProjects: !state.showListProjects,\r\n      };\r\n    case ProjectActionTypes.CLEAR_PROJECT:\r\n      return {\r\n        ...state,\r\n        projects: [],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default projectReducer;\r\n","export const setWithDate = (collections) => {\r\n  const transformedCollection = collections\r\n    .slice()\r\n    .sort((a, b) => b.createdAt - a.createdAt);\r\n  return transformedCollection;\r\n};\r\n\r\nexport const setWithToday = (collections) => {\r\n  const transformedCollection = collections\r\n    .slice()\r\n    .sort((a, b) => b.completed - a.completed);\r\n  return transformedCollection;\r\n};\r\n\r\nexport const setWithDue = (collections) => {\r\n  const transformedCollection = collections\r\n    .slice()\r\n    .sort((a, b) => a.completed - b.completed);\r\n\r\n  return transformedCollection;\r\n};\r\nexport const setWithProject = (collections, project) => {\r\n  const transformedCollection = collections.slice().sort((a, b) => {\r\n    var x = a.addproject.toLowerCase();\r\n    var y = b.addproject.toLowerCase();\r\n    if (x < y) {\r\n      return -1;\r\n    }\r\n    if (x > y) {\r\n      return 1;\r\n    }\r\n    return 0;\r\n  });\r\n\r\n  return transformedCollection;\r\n};\r\n","import { TodoActionTypes } from \"./todo.types\";\r\nimport {\r\n  setWithDate,\r\n  setWithToday,\r\n  setWithDue,\r\n  setWithProject,\r\n} from \"./todo.util\";\r\nconst INITIAL_STATE = {\r\n  todos: [],\r\n  header: \"All Tasks\",\r\n  addToDo: false,\r\n};\r\n\r\nconst todoReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case TodoActionTypes.SET_SHOW_ADDTODO:\r\n      return {\r\n        ...state,\r\n        addToDo: !state.addToDo,\r\n      };\r\n    case TodoActionTypes.SET_TODO:\r\n      return {\r\n        ...state,\r\n        todos: action.payload,\r\n        header: \"All Todos\",\r\n      };\r\n\r\n    case TodoActionTypes.CLEAR_TODO:\r\n      return {\r\n        ...state,\r\n        todos: [],\r\n      };\r\n    case TodoActionTypes.SET_TODO_WITHDATE:\r\n      return {\r\n        ...state,\r\n        todos: setWithDate(state.todos),\r\n        header: action.payload,\r\n      };\r\n    case TodoActionTypes.SET_TODO_WITHTODAY:\r\n      return {\r\n        ...state,\r\n        todos: setWithToday(state.todos),\r\n        header: action.payload,\r\n      };\r\n    case TodoActionTypes.SET_TODO_WITHDUE:\r\n      return {\r\n        ...state,\r\n        todos: setWithDue(state.todos, action.payload),\r\n        header: action.payload,\r\n      };\r\n\r\n    case TodoActionTypes.SET_TODO_WITHPROJECT:\r\n      return {\r\n        ...state,\r\n        todos: setWithProject(state.todos, action.payload),\r\n        header: action.payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default todoReducer;\r\n","import { UserActionTypes } from \"./user.types\";\r\n\r\nconst INITIAL_STATE = {\r\n  currentUser: [],\r\n  isLoading: true,\r\n};\r\n\r\nconst userReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case UserActionTypes.SET_CURRENT_USER:\r\n      return {\r\n        ...state,\r\n        currentUser: action.payload,\r\n        isLoading: false,\r\n      };\r\n\r\n    case UserActionTypes.CLEAR_USER:\r\n      return {\r\n        ...state,\r\n        currentUser: [],\r\n        isLoading: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default userReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport projectReducer from \"./projects/project.reducer\";\r\nimport todoReducer from \"./todo/todo.reducer\";\r\nimport userReducer from \"./user/user.reducer\";\r\nexport default combineReducers({\r\n  user: userReducer,\r\n  todo: todoReducer,\r\n  project: projectReducer,\r\n});\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport logger from \"redux-logger\";\r\nimport rootReducer from \"./root-reducer\";\r\n\r\nconst middlewares = [logger];\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares));\r\n\r\nexport default { store };\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./redux/store\";\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}